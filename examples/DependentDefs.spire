not : Bool -> Bool
not = \ b -> elimBool (\ _ -> Bool) false true b

myUnit : Unit
myUnit = tt

myUnit2 : Unit
myUnit2 = tt

If : Bool -> Type
If = \ b -> elimBool (\ _ -> Type) Bool Unit b

myFalse : If (not false)
myFalse = false

myType : Type
myType = Bool -> elimBool (\ _ -> Type) Unit Bool (not false)

myType2 : Type
myType2 = Bool -> elimBool (\ _ -> Type) Unit Bool (not myFalse)

myPair    : (b : Bool) * If (not b)
myPair = true , tt


