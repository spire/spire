
not : Bool -> Bool
not = \ b ->
  if b then false else true

myTrue : Bool
myTrue = true

If : Bool -> Type
If = \ b -> if b then Bool else Unit

myFalse : If myTrue
myFalse = if myTrue then false else true

myFalse2 : Bool
myFalse2 = not myTrue

--       (b : Bool) * if b then Unit else Bool
myPair : (b : Bool) * If (not b)
myPair = false, true

myFun : (b : Bool) -> if b then Unit else Bool
myFun = \ b ->
  caseBool (\ x -> if x then Unit else Bool) b tt false
