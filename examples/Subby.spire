not : Bool -> Bool
not = \ b -> if b then false else true

unit : Unit
unit = tt

myFun : (b : Bool) -> Bool
myFun = \ b -> (not $ b)

foo : Type
foo = (b : Bool) * (if (not $ true) then Bool else Unit)

bar : Unit -> Bool
bar = \ u -> if not true then true else false

myType : Type
myType = (f : (b1 : Bool) -> Bool) -> ((u : Unit) -> (b2 : Bool) * (if (f $ true) then Bool else Unit))
