

myTrue : Bool
myTrue = true

not : Bool -> Bool
not = \ b -> elimBool (\ _ -> Bool) false true b

myFalse : Bool
myFalse = ((\ b -> elimBool (\_ -> Bool) false true b) : Bool -> Bool) true

myPair : (b : Bool) * elimBool (\_ -> Type) Unit Bool b
myPair = false , true

swapped1 : Unit
swapped1 = ((\u -> (\b -> u)) : Unit -> Bool -> Unit) tt false

swapped2 : Bool
swapped2 = ((\u -> (\b -> b)) : Unit -> Bool -> Bool) tt false

shadowed1 : Unit -> Bool -> Bool
shadowed1 = \x -> \x -> x

shadowed2 : Bool -> Bool -> Unit -> Unit
shadowed2 = \x -> \x -> \x -> x


