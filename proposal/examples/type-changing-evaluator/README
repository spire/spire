Can we write a generic program that changes types?

See the evaulator in NotTypeChanging.hs for a version that does *not*
change types.  What we want to do instead is use types to guarantee
that the evaluator produces normal terms.

Consider a possibly reducible lambda calc:

  E ::= x | \x.E | E E

And a canonical lambda calc that does not permit reducible terms:

  M ::= \x.M | R
  R ::= x | R M

The evaluator in NotTypeChanging.hs maps E to E, but we want to map E
to M instead.  Attempt in TypeChanging.hs.
